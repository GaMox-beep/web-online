@model selling_online.Models.ViewModel.Cart
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/js/all.min.js" integrity="sha512-6sSYJqDreZRZGkJ3b+YfdhB3MzmuP9R7X1QZ6g5aIXhRvR1Y/N/P47jmnkENm7YL3oqsmI6AK+V6AD99uWDnIw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<style>
    .shopping-cart {
        background-color: ghostwhite;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    }

    .cart-section {
        background-color: white;
     
     
        padding: 15px;
        margin: 15px;
     
    }
    .col-md-3 cart-section {
        position: absolute;
        right: 0;
        top: 0;
        width: 25%; /* giữ chiều rộng cố định, nhưng chiều cao sẽ dựa vào nội dung */
    }

    .cart-button {
        width: 250px;
        border: 1px solid #000000;
        margin: 10px;
        padding: 8px;
        border-radius: 5px;
    }
    .quantity.button {
        width: 20px;
        height: 30px;
        background-color: #f5f5f5; /* Màu nền nhẹ */
        border: 1px solid #ccc;
        font-weight: bold;
        cursor: pointer;
        text-align: center;
    }

    .product-cart-info {
        display: inline-block;
        vertical-align: top;
    }

    .shopping-cart table {
        width: 100%;
        border-collapse: collapse;
    }

    .shopping-cart th, .shopping-cart td {
        padding: 12px;
        border-bottom: 1px solid #ddd;
        text-align: left;
    }

    .shopping-cart th {
        background-color: #f5f5f5;
        font-weight: bold;
        border-top: 1px solid #ddd;
    }

    .shopping-cart tr:last-child td {
        border-bottom: none;
    }

    .shopping-cart img {
        max-height: 80px;
        border-radius: 8px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        display: block;
        margin: 0 auto;
    }

    .total-price {
        font-weight: bold;
        font-size: larger;
        color: red;
    }
</style>

<script language="JavaScript">
    function cartUpdateQuantity(id, newQuantity) {
        if (newQuantity < 1) return;
        const form = document.createElement('form');
        form.method = 'post'
        form.action = '@Url.Action("UpdateQuantity","Cart")';

        const idInput = document.createElement('input');
        idInput.type = 'hidden';
        idInput.name = 'id';
        idInput.value = id;
        form.appendChild(idInput);

        const quantityInput = document.createElement('input');
        quantityInput.type = 'hidden';
        quantityInput.name = 'quantity';
        quantityInput.value = newQuantity;
        form.appendChild(quantityInput);

        document.body.appendChild(form);
        form.submit();
    }
</script>
@if (User.Identity.IsAuthenticated)
{
    System.Diagnostics.Debug.WriteLine("User is authenticated: " + User.Identity.Name);
}
else
{
    System.Diagnostics.Debug.WriteLine("User is not authenticated.");
}
<h2 style="text-align:center">GIỎ HÀNG</h2>
<div class="shopping-cart">
    @if (!Model.Items.Any())
    {<p> Bạn chưa có sản phẩm nào trong giỏ hàng</p>}
    else
    {
    <div class="row cart-section">
        <div class="col-md-8 cart-section">
            <table class="table">
                <thead>
                    <tr>
                        <th colspan="2">Sản phẩm</th>
                        <th>Số lượng </th>
                        <th> Đơn giá</th>
                        <th> Thành tiền</th>
                        <th title="Xóa hết tất cả mặt hàng trong giỏ">
                            <a href="@Url.Action("ClearCart","Cart",null)"><i class="fa-solid fa-trash"></i> </a>

                        </th>

                    </tr>

                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td><img src="@item.Image" alt="@item.ProductName" style="max-height:80px; " /></td>
                            <td class="col-md-3">@item.ProductName</td>
                            <td>
                                @using (Html.BeginForm("UpdateQuantity", "Cart", FormMethod.Post))
                                {
                                    <input type="hidden" name="id" value="@item.ProductID" />

                                    <button type="button" class="quantity button" style="width:20px;" onclick="cartUpdateQuantity(@item.ProductID,@item.Quantity-1)">-</button>
                                    <input type="number" name="quantity" value="@item.Quantity" min="1" max="100" style="width:40px; text-align:right;" readonly />
                                    <button type="button" class="quantity button"style="width:20px;" onclick="cartUpdateQuantity(@item.ProductID,@item.Quantity+1)">+</button>
                                }
                            </td>
                            <td>@item.Price.ToString("N0")</td>
                            <td>@item.TotalPrice.ToString("N0")</td>
                            <td><a href="@Url.Action("RemoveFromCart","Cart",new { id = item.ProductID })"><i class="fa-solid fa-trash"></i></a></td>
                        </tr>
                    }

                </tbody>
            </table>
            <hr />
        </div>

        <div class="col-md-3 cart-section">
            <div>
                <strong> Tổng giá trị: &nbsp;<span style="color:red;">@Model.TotalValue().ToString("N0") VNĐ</span></strong>
            </div>
            <div>@Html.ActionLink("Mua hàng ", "CheckOut", "Order", null, new { @class = "btn btn-danger cart-button" })</div>
        </div>
     </div>
    }
</div>
<div class="col-md-12">@Html.ActionLink("Tiếp tục mua hàng", "Index", "Home", null, new { @class = "btn btn-warning cart-button" }) </div>
